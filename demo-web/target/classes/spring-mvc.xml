<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
        default-lazy-init="false">

    <!--SpringMVC的配置-->
    <context:component-scan base-package="com.alibaba.web.controller"/>
    <!--SpringMVC的配置-->
    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
    <mvc:default-servlet-handler/>
    <context:annotation-config />
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 启动注解驱动的spring mvc 功能 -->
 <!--    <mvc:annotation-driven conversion-service="customConversionService">
         <mvc:message-converters register-defaults="false">
             <ref bean="byteArrayHttpMessageConverter"/>
             <ref bean="stringHttpMessageConverter"/>
             <ref bean="fastJsonHttpMessageConverter"/>
         </mvc:message-converters>
     </mvc:annotation-driven>
     <bean id="customConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
         <property name="converters">
             <set>
                 &lt;!&ndash; 字符串格式的日期转换成Date格式的日期 &ndash;&gt;
                 <bean class="com.aliyun.util.DateUtil.DateConverter"/>
             </set>
         </property>
     </bean>
     <bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
     <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
         <constructor-arg value="UTF-8"/>
         <property name="supportedMediaTypes">
             <list>
                 <value>text/html;charset=UTF-8</value>
                 <value>text/plain;charset=UTF-8</value>
                 <value>application/xml;charset=UTF-8</value>
             </list>
         </property>
     </bean>-->


    <!-- 拦截器列表 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/static/**" />
            <!--<mvc:exclude-mapping path="/login/welcome" />-->
            <!-- 获取登录用户 -->
            <bean class="com.alibaba.web.interceptor.WebInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <!--导入dubbo消费者配置-->
    <import resource="applicationContext.xml"/>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    <!-- 定义无需Controller的url<->view直接映射 -->
    <!-- 用户没有权限 -->
    <!--   <mvc:view-controller path="/login/unauthorizedUrl" view-name="/common/unauthorizedUrl" />
       &lt;!&ndash;页面报错，比如404，500等错误&ndash;&gt;
       <mvc:view-controller path="/error" view-name="/common/error" />-->

    <!-- 全局异常处理器 -->
       <bean id="globalExceptionResolver"
             class="com.alibaba.web.exception.HandlerExceptionResolver">
           <property name="jsonMessageConverter" ref="fastJsonHttpMessageConverter"/>
           <property name="order" value="1"/>
       </bean>
    <!-- JSON支持，避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig" ref="fastJsonConfig"/>
    </bean>
    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="features">
            <list>
                <value>DisableFieldSmartMatch</value>
            </list>
        </property>
        <property name="serializerFeatures">
            <list>
                <!-- Date的日期转换器 默认是﻿yyyy-MM-dd HH:mm:ss 格式-->
                <value>WriteDateUseDateFormat</value>
                <!-- DisableCircularReferenceDetect 解决循环引用问题，-->
                <value>DisableCircularReferenceDetect</value>
            </list>
        </property>
    </bean>
    <!-- 配置RestTemplate -->
    <!--Http client Factory -->
    <bean id="httpClientFactory"
          class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout" value="10000" />
        <property name="readTimeout" value="10000" />
    </bean>
    <!--RestTemplate -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="httpClientFactory" />
        <property name="messageConverters">
            <list>
                <ref bean="restFastJsonHttpMessageConverter"/>
            </list>
        </property>
        <!--   <property name="errorHandler">
               <bean class="com.wdhis.emis.web.controller.pubhealth.HttpErrorHandler"/>
           </property>-->
    </bean>
    <bean id="restFastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig" ref="restFastJsonConfig"/>
    </bean>
    <bean id="restFastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="features">
            <list>
                <value>DisableFieldSmartMatch</value>
            </list>
        </property>
        <property name="serializerFeatures">
            <list>
                <!-- DisableCircularReferenceDetect 解决循环引用问题，-->
                <value>DisableCircularReferenceDetect</value>
            </list>
        </property>
    </bean>
   <!-- <bean id="loginService" class="com.alibaba.service.impl.LoginServiceImpl">
    </bean>-->
</beans>